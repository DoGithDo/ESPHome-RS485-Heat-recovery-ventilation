#To track if slave looses connection to master

sensor:
# Timeout for Master-Slave connection. Sets binary-sensor connection_to_master
# Restarts after 1h with no serial connection
  - platform: template
    id: timeout_master
    name: "Timeout Master"
    state_class: "measurement"
    icon: mdi:lan-connect
    entity_category: diagnostic
    accuracy_decimals: 0
    web_server_sorting_weight: 111
    update_interval: never
    filters:
      - timeout:
          timeout: 1min
          value: 0
      - timeout:
          timeout: 60min
          value: 2
    on_value:
      then:
        - if:
            condition:
              lambda: |-
                return id(timeout_master).state == 0;
            then:
              - lambda: |-
                  id(connection_to_master).publish_state(false);
            else:
              - lambda: 'id(connection_to_master).publish_state(true);'
        - if:
            condition:
              lambda: |-
                return id(timeout_master).state == 2;
            then:
              - button.press: restart_button


############################################# Binary Sensor ###############################################
binary_sensor:

# Track connection to master, set by sensor timeout_master. Execute failover mode
  - platform: template
    id: connection_to_master
    name: Verbindung zum Master
    icon: mdi:lan-connect
    device_class: connectivity
    entity_category: diagnostic
    web_server_sorting_weight: 110
    on_state:
      then:
        - if:
            condition:
              lambda: 'return x == false;'
            then:     
              - fan.turn_on:
                  id: fan_used
                  speed: ${level_1}
              - fan.turn_on:
                  id: fan_fresh
                  speed: ${level_1}
              - switch.turn_on: wifi_slave
              - light.turn_on:
                  id: led_red      
              #flap depending on temperature
              - if:
                  condition:
                    or:
                      - lambda: |-
                          return id(temp_fresh_before).state < 22;
                      - lambda: |-
                          return id(temp_fresh_before).state > 26; 
                  then:
                    - switch.turn_off: flap_heat_exchanger
        - if:
            condition:
              lambda: |-
                return x == true;
            then:
              - light.turn_off:
                  id: led_red